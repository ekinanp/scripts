* For a PA cpp component, you can just setup-pa-environment which grab a build host to do the build on. Can use what's in the Makefile to build everything. For example, if I'm working on Facter, I can swap in my facter and just run 'make facter' on the build host. If certain steps fail (or take too long) I can delete them from the Makefile and work accordingly. Problem is this might take a bit of time to copy things over, but that's ok. Our repos aren't that big so this shouldn't be an issue.

* For something like puppet, you can:
    - Run Vanagon once to build the package
    - Run the dev_environment::basic manifest to set-up vim and git
    - Comment out all of the components, manually building puppet by seeing how Vanagon does it
    - Run Vanagon. Since components are commented out, all it will do is build the final package.
    This should significantly speed up dev. time on this, e.g. such as when you're doing types
    and providers work.
    - Then you can just run beaker over and over again on another host to check acceptance tests.
    - Pattern is:
        * One build host to iterate on and build package
        * Provision new hosts to run acceptance tests on
